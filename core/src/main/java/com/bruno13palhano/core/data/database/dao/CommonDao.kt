package com.bruno13palhano.core.data.database.dao

import androidx.room.Dao
import androidx.room.Delete
import androidx.room.Insert
import androidx.room.OnConflictStrategy.Companion.REPLACE
import androidx.room.Update

/**
 * Common Dao operations.
 *
 * An interface for three common Dao operations:
 * Insert, Update and Delete.
 * The model of type [T] needs to be marked with Room's @Entity annotation.
 * @param T the entity type.
 */
@Dao
interface CommonDao<T> {

    /**
     * Inserts a [model] of type [T] into the database.
     * @return the id generated by Room for this [model].
     */
    @Insert(onConflict = REPLACE)
    suspend fun insert(model: T): Long

    /**
     * Updates the [model] in the database.
     */
    @Update
    suspend fun update(model: T)

    /**
     * Deletes the [model] in the database.
     */
    @Delete
    suspend fun delete(model: T)
}